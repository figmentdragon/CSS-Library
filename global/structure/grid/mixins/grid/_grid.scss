/* Grid system */
/* Generate semantic grid columns with these mixins. */
@mixin make-grid() {
  display: grid;
  grid-template-columns: repeat($grid-columns, 1fr);
  grid-template-rows: repeat($grid-row-columns, 1fr);
  grid-gap: $grid-gutter-width;
  grid-auto-rows: divide(100%, $grid-row-columns);
  grid-auto-columns: divide(100%, $grid-columns);
  grid-auto-flow: row dense;
  justify-content: start;
  align-content: stretch;
  justify-content: flex-start;
  align-items: stretch;
  @include resp-min($breakpoint-sm) {
    grid-gap: divide($spacer, 2);
  }
  @include resp-max($breakpoint-xxl);
}

@mixin grid-col {
  float: left;
  padding-right: 0.75em;
}

@mixin grid-max-width {
  @each $breakpoint in $breakpoints {
    $size:        nth($grid-breakpoints, 1);
    $name:        nth($grid-breakpoints, 1);
    $declaration: nth($breakpoints, 2);
    @media only screen {
      $max-content-width: screen ($name - ($grid-gutter-width * 2));
      $grid-max-width:    $name - ($grid-gutter-width * .5);
      $container-max-width: $name - calc($grid-gutter-width * 2);
    }
  }
}
