@mixin make-container($gutter: $container-offset) {
  width: 100%;
  @include grid-max-width;
  padding-right: ($gutter * .5);
  margin: $spacer;
}

// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.
@if $enable-container-classes {
  // Single container class with breakpoint max-widths
  .container,
  // 100% wide container at all breakpoints
  .container-fluid {
    @include make-container();
  }

  // Responsive containers that are 100% wide until a breakpoint
  @each $breakpoint, $container-max-width in $container-max-widths {
    .container-#{$breakpoint} {
      @extend .container-fluid;
    }

    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
      %responsive-container-#{$breakpoint} {
        max-width: $container-max-width;
      }

      // Extend each breakpoint which is smaller or equal to the current breakpoint
      $extend-breakpoint: true;

      @each $name, $width in $grid-breakpoints {
        @if ($extend-breakpoint) {
          .container#{breakpoint-infix($name, $grid-breakpoints)} {
            @extend %responsive-container-#{$breakpoint};
          }

          // Once the current breakpoint is reached, stop extending
          @if ($breakpoint == $name) {
            $extend-breakpoint: false;
          }
        }
      }
    }
  }
}

// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($max-widths: $container-max-widths) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint) {
      max-width: $container-max-width;
    }
  }
}

// container mixins
@mixin container($type, $display, $overflow){
  @include clearfix;
  @include box-sizing($type);
  display: $display;
  overflow: $overflow;
}

@mixin text-container($type) {
  @include clearfix;
  @include box-sizing($type);
  align-items: left;
  justify-content: flex-start;
  padding-top: $offset;
  padding-bottom: $offset;
}

// container mixins
@mixin container($offset-y, $offset-x) {
  @include clearfix;
  padding-top: $offset;
  padding-right: $offset;
  padding-bottom: $offset;
  padding-left: $offset;
  width: 100%;
  max-width: 1920;
}
