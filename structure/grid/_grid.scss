[class*='grid'],
[class*='col-'],
[class*='mobile-'],
.grid:after {
  @include box-sizing($type:border-box);
  content: "";
	display: table;
	clear: both;
}

[class*='col-'] {
	float: left;
  min-height: 1px;
	padding-right: 20px; /* column-space */
}

[class*='col-'] [class*='col-']:last-child {
	padding-right: 0;
}

.grid {
  overflow: hidden;
  margin: 0 auto;
  width: 100%;
  display: grid;
  grid-gap: $grid-gutter;
  grid-template-columns: repeat($grid-columns, 1fr);
  grid-template-rows: repeat($grid-row-columns, 1fr);
  grid-auto-rows: divide(100%, $grid-row-columns);
  grid-auto-columns: divide(100%, $grid-columns);
  @include resp-max($breakpoint-sm) {
    grid-gap: divide($spacer, 2);
  }

  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @media only screen and ($name) {
      @for $i from 1 through 6 {
        &.grid--#{$name}-#{$i}x {
          grid-template-columns: repeat(#{$i}, minmax(0, 1fr));
        }
      }
    }
  }
}

.grid-pad {
	padding-top: 20px;
	padding-left: 20px; /* grid-space to left */
	padding-right: 0; /* grid-space to right: (grid-space-left - column-space) e.g. 20px-20px=0 */
}

.push-right {
	float: right;
}