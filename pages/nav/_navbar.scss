/* #NAVBAR# */

/*  *TOC*
 *  () Navbar
 *  () Navbar brand
 *  () Navbar nav
 *  () Responsive navbar
 *  () Navbar position
 */

 /* NAVBAR */
/*
/* Provide a static navbar from which we expand to create full-width, fixed, and other navbar variations. */

.navbar {
  position: relative;
  display: flex;
  flex-wrap: wrap; /* allow us to do the line break for collapsing content */
  align-items: center;
  justify-content: space-between; /* space out brand from logo */
  padding-top: $navbar-padding-y;
  padding-right: $navbar-padding-x; /* default: null
  padding-bottom: $navbar-padding-y; */
  padding-left: $navbar-padding-x; /* default: null */
  @include gradient-bg();

  /* Because flex properties aren't inherited, we need to redeclare these first few properties so that content nested within behave properly. */
  /* The `flex-wrap` property is inherited to simplify the expanded navbars */
  justify-self: stretch;
  %container-flex-properties
  {
      display: flex;
      align-items: center;
      flex-wrap: inherit;
      justify-content: space-between;
  }

  > .container,
  > .container-fluid {
    @extend %container-flex-properties;
  }

  @each $breakpoint, $container-max-width in $container-max-widths {
    > .container#{breakpoint-infix($breakpoint, $container-max-widths)} {
      @extend %container-flex-properties;
    }
  }
}
/* scss-docs-start navbar-expand-loop */
/* Generate series of `.navbar-expand-*` responsive classes for configuring where your navbar collapses. */
.navbar-expand {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    /* stylelint-disable-next-line scss/selector-no-union-class-name */
    &#{$infix} {
      @include media-breakpoint-up($next) {
        flex-wrap: nowrap;
        justify-content: flex-start;

        .navbar-nav {
          flex-direction: row;

          .dropdown-menu {
            position: absolute;
          }

          .nav-link {
            padding-right: $navbar-nav-link-padding-x;
            padding-left: $navbar-nav-link-padding-x;
          }
        }

        .navbar-nav-scroll {
          overflow: visible;
        }

        .navbar-collapse {
          display: flex !important; /* stylelint-disable-line declaration-no-important */
          flex-basis: auto;
        }

        .navbar-toggler {
          display: none;
        }

        .offcanvas-header {
          display: none;
        }

        .offcanvas {
          position: inherit;
          bottom: 0;
          z-index: auto;
          flex-grow: 1;
          visibility: visible !important; /* stylelint-disable-line declaration-no-important */
          background-color: transparent;
          border-right: 0;
          border-left: 0;
          @include box-shadow(none);
          @include transition(none);
          transform: none;
        }
        .offcanvas-top,
        .offcanvas-bottom {
          height: auto;
          border-top: 0;
          border-bottom: 0;
        }

        .offcanvas-body {
          display: flex;
          flex-grow: 0;
          padding: 0;
          overflow-y: visible;
        }
      }
    }
  }
}
/* scss-docs-end navbar-expand-loop */

/* Navbar themes */
/* Styles for switching between navbars with light or dark background. */

/* Dark links against a light background */
.navbar-light {
  .navbar-brand {
    color: $navbar-light-brand-color;

    &:hover,
    &:focus {
      color: $navbar-light-brand-hover-color;
    }
  }

  .navbar-nav {
    .nav-link {
      color: $navbar-light-color;

      &:hover,
      &:focus {
        color: $navbar-light-hover-color;
      }

      &.disabled {
        color: $navbar-light-disabled-color;
      }
    }

    .show > .nav-link,
    .nav-link.active {
      color: $navbar-light-active-color;
    }
  }

  .navbar-toggler {
    color: $navbar-light-color;
    border-color: $navbar-light-toggler-border-color;
  }

  .navbar-toggler-icon {
    background-image: escape-svg($navbar-light-toggler-icon-bg);
  }

  .navbar-text {
    color: $navbar-light-color;

    a,
    a:hover,
    a:focus  {
      color: $navbar-light-active-color;
    }
  }
}

/* White links against a dark background */
.navbar-dark {
  .navbar-brand {
    color: $navbar-dark-brand-color;

    &:hover,
    &:focus {
      color: $navbar-dark-brand-hover-color;
    }
  }

  .navbar-nav {
    .nav-link {
      color: $navbar-dark-color;

      &:hover,
      &:focus {
        color: $navbar-dark-hover-color;
      }

      &.disabled {
        color: $navbar-dark-disabled-color;
      }
    }

    .show > .nav-link,
    .nav-link.active {
      color: $navbar-dark-active-color;
    }
  }

  .navbar-toggler {
    color: $navbar-dark-color;
    border-color: $navbar-dark-toggler-border-color;
  }

  .navbar-toggler-icon {
    background-image: escape-svg($navbar-dark-toggler-icon-bg);
  }

  .navbar-text {
    color: $navbar-dark-color;
    a,
    a:hover,
    a:focus {
      color: $navbar-dark-active-color;
    }
  }
}
